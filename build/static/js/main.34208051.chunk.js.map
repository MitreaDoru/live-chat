{"version":3,"sources":["components/right/ChatBox.module.css","components/left/PersonalMessages.module.css","components/right/ChatInfo.module.css","components/HomeContent.module.css","components/left/CreateChat.module.css","components/headers/AuthHeader.module.css","components/right/InputMessage.module.css","components/auth/LoginContent.module.css","components/auth/SigninContent.module.css","components/left/Search.module.css","components/store/auth.js","components/store/chat.js","components/headers/AuthHeader.js","socket.js","components/left/CreateChat.js","components/left/Search.js","components/left/PersonalMessages.js","components/Left.js","components/right/ChatInfo.js","components/right/ChatBox.js","components/right/InputMessage.js","components/Right.js","components/HomeContent.js","pages/Home.js","components/auth/LoginContent.js","pages/Login.js","components/auth/SigninContent.js","pages/Signin.js","App.js","components/store/index.js","index.js"],"names":["module","exports","authSlice","createSlice","name","initialState","isAuthenticated","token","userId","image","reducers","login","state","action","payload","logout","authAction","actions","chatSlice","secondUser","user","agenda","filteredAgenda","filteredAgendaNotFound","displayedChat","isSearching","message","conversations","createGroup","groupUsers","leaveButton","showInput","error","showRight","windowWidth","groupName","groupImageIsSelected","showGroupNameInput","groupImage","userAgenda","filteredConvo","getMessage","getConversations","length","find","filter","push","updateConversations","conversation","conversationIndex","findIndex","_id","conv","leaveConversation","updateMessages","messages","personalImage","chatAction","HomeHeader","navigate","useNavigate","dispatch","useDispatch","localStorageIsAuth","localStorage","getItem","className","styled","header","onClick","to","removeItem","socket","socketio","SocketContext","React","createContext","CreateChat","useContext","useSelector","chat","localStorageId","useState","setGroupImage","imAlreadyInGroup","type","id","onChange","e","preventDefault","formData","FormData","append","target","files","fetch","method","headers","Authorization","body","then","result","json","data","errorMessage","setItem","emit","catch","err","console","log","none","src","alt","checkMyUserExist","JSON","stringify","oldInput","newAgenda","map","isChecked","Search","setTimeout","search","value","trim","toLowerCase","includes","placeholder","onFocus","defaultValue","PersonalMessages","contact","stopPropagation","newUserIds","conversationForReturn","conversationUsers","undefined","secondUserName","conversationInfo","conversationDetails","nameAndLastMessage","chatName","slice","lastMessage","lastMessageTime","defaultChecked","Date","time","getHours","getMinutes","Left","ChatInfo","info","backButton","Object","values","membersNames","convId","leaveName","ChatBox","ref","useRef","useEffect","current","scrollIntoView","behavior","scrollDownHandler","on","dataInfo","userInfo","removeAllListeners","messageUser","personalFlexEnd","messageInfo","nameAndMessage","margin","leftConvo","InputMessage","personalName","localStorageUserId","input","onSubmit","personalId","disabled","right","HomeContent","expiryDate","setAutoLogout","getTime","milliseconds","userIdFromConversation","toString","users","classLeft","dontShow","classRight","handleResize","window","innerWidth","addEventListener","removeEventListener","home","container","left","Right","Home","Login","email","setEmail","password","setPassword","setErrorMessage","loginContainer","htmlFor","LoginContent","Signin","setName","setImage","signinContainer","signin","SigninContent","router","createBrowserRouter","path","element","AuthHeader","children","App","Provider","store","configureStore","reducer","auth","authReducer","chatReducer","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.34208051.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"ChatBox_messages__19jSb\",\"message\":\"ChatBox_message__2y8AG\",\"messageInfo\":\"ChatBox_messageInfo__1Uegq\",\"nameAndMessage\":\"ChatBox_nameAndMessage__2f0JZ\",\"name\":\"ChatBox_name__1ZnyV\",\"time\":\"ChatBox_time__2ms21\",\"personalFlexEnd\":\"ChatBox_personalFlexEnd__3Bsos\",\"leftConvo\":\"ChatBox_leftConvo__3yeCn\",\"margin\":\"ChatBox_margin__2a3L3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversation\":\"PersonalMessages_conversation__DwH6m\",\"conversationInfo\":\"PersonalMessages_conversationInfo__3B8ol\",\"conversationDetails\":\"PersonalMessages_conversationDetails__14pAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ChatInfo_info__2O5oK\",\"conversation\":\"ChatInfo_conversation__2JZvU\",\"conversationInfo\":\"ChatInfo_conversationInfo__2BQSg\",\"conversationDetails\":\"ChatInfo_conversationDetails__2HTIR\",\"backButton\":\"ChatInfo_backButton__2ug9V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"HomeContent_home__2dpHN\",\"container\":\"HomeContent_container__1sGoT\",\"left\":\"HomeContent_left__3nwIX\",\"action\":\"HomeContent_action__3OTHV\",\"search\":\"HomeContent_search__qvOn-\",\"conversation\":\"HomeContent_conversation__31RHE\",\"right\":\"HomeContent_right__x2vJI\",\"conversationInfo\":\"HomeContent_conversationInfo__2AKN9\",\"conversationDetails\":\"HomeContent_conversationDetails__1h1hD\",\"info\":\"HomeContent_info__CgNZ-\",\"messages\":\"HomeContent_messages__19pjl\",\"message\":\"HomeContent_message__1r2Wn\",\"messageInfo\":\"HomeContent_messageInfo__30amj\",\"input\":\"HomeContent_input__udSoR\",\"dontShow\":\"HomeContent_dontShow__1phIB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"action\":\"CreateChat_action__en-HZ\",\"groupImage\":\"CreateChat_groupImage__271vi\",\"none\":\"CreateChat_none__8pSs7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AuthHeader_header__7Kx4G\",\"name\":\"AuthHeader_name__Q6Mik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputMessage_input__2eKQA\",\"message\":\"InputMessage_message__2_SEW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"LoginContent_loginContainer__3DO_j\",\"login\":\"LoginContent_login__2p8BH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signinContainer\":\"SigninContent_signinContainer__3isNf\",\"signin\":\"SigninContent_signin__3Jjqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__2DVx1\",\"groupNameInvalid\":\"Search_groupNameInvalid__3ot_0\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialAuthState = {\n    isAuthenticated: false,\n    token: '',\n    userId: '',\n    image: ''\n};\n\nconst authSlice = createSlice({\n    name: \"authentication\",\n    initialState: initialAuthState,\n    reducers: {\n        login(state, action) {\n            state.isAuthenticated = true;\n            state.token = action.payload.token;\n            state.userId = action.payload.userId;\n            state.image = action.payload.image;\n\n        },\n        logout(state) {\n\n            state.isAuthenticated = false;\n            state.token = '';\n            state.userId = '';\n            state.image = '';\n        },\n    },\n});\nexport const authAction = authSlice.actions;\nexport default authSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    secondUser: '',\n    name: '',\n    user: '',\n    agenda: [],\n    filteredAgenda: [],\n    filteredAgendaNotFound: '',\n    displayedChat: '',\n    isSearching: false,\n    message: '',\n    conversations: [],\n    createGroup: false,\n    groupUsers: [],\n    leaveButton: false,\n    showInput: false,\n    error: '',\n    showRight: false,\n    windowWidth: '',\n    image: '',\n    groupName: '',\n    groupImageIsSelected: false,\n    showGroupNameInput: false,\n    groupImage: ''\n};\n\nconst chatSlice = createSlice({\n    name: \"conversation\",\n    initialState: initialState,\n    reducers: {\n        name(state, action) {\n            state.name = action.payload;\n        },\n        user(state, action) {\n            state.user = action.payload;\n        },\n        userAgenda(state, action) {\n            state.agenda = action.payload;\n        },\n        secondUser(state, action) {\n            state.secondUser = action.payload;\n        },\n        isSearching(state, action) {\n            state.isSearching = action.payload;\n        },\n        filteredAgenda(state, action) {\n            state.filteredConvo = action.payload;\n        },\n        filteredAgendaNotFound(state, action) {\n            state.filteredAgendaNotFound = action.payload;\n        },\n        displayedChat(state, action) {\n            state.displayedChat = action.payload;\n\n        },\n        getMessage(state, action) {\n            state.message = action.payload;\n        },\n        getConversations(state, action) {\n            state.conversations = action.payload;\n        },\n        createGroup(state, action) {\n            state.createGroup = action.payload;\n        },\n        groupName(state, action) {\n            state.groupName = action.payload;\n        },\n        groupUsers(state, action) {\n            if (action.payload.length >= 2) {\n                state.groupUsers = action.payload;\n            } else {\n                if (action.payload === false) {\n                    state.groupUsers = [];\n                } else {\n                    const user = state.groupUsers.find(user => user.userId === action.payload.userId);\n                    if (!user) {\n                        state.groupUsers.push(action.payload);\n                    } else {\n                        state.groupUsers = state.groupUsers.filter(user => user.userId !== action.payload.userId);\n                    }\n                }\n            }\n        },\n        updateConversations(state, action) {\n            if (action.payload.conversation) {\n                const conversationIndex = state.conversations.findIndex(conversation => conversation._id === action.payload.conversation._id)\n                state.conversations[conversationIndex] = action.payload.conversation\n            } else {\n                state.conversations = state.conversations.filter(conv => conv._id !== action.payload._id);\n                state.conversations = [action.payload, ...state.conversations];\n            }\n        },\n        leaveConversation(state, action) {\n            state.conversations = state.conversations.filter(conversation => conversation._id !== action.payload._id);\n        },\n        leaveButton(state, action) {\n            state.leaveButton = action.payload;\n        },\n        showInput(state, action) {\n            state.showInput = action.payload;\n        },\n        updateMessages(state, action) {\n            state.displayedChat.messages = action.payload;\n        },\n        error(state, action) {\n            state.error = action.payload;\n        },\n        showRight(state, action) {\n            state.showRight = action.payload\n        },\n        windowWidth(state, action) {\n            state.windowWidth = action.payload\n        },\n        personalImage(state, action) {\n            state.image = action.payload\n        },\n        groupImage(state, action) {\n            state.groupImage = action.payload\n        },\n        groupImageIsSelected(state, action) {\n            state.groupImageIsSelected = action.payload\n        },\n        showGroupNameInput(state, action) {\n            state.showGroupNameInput = action.payload\n        }\n\n\n\n    },\n});\nexport const chatAction = chatSlice.actions;\nexport default chatSlice.reducer;","import { Fragment } from 'react';\nimport { Outlet, Link } from 'react-router-dom';\nimport styled from './AuthHeader.module.css';\nimport { useDispatch } from \"react-redux\";\nimport { authAction } from \"../store/auth\";\nimport { chatAction } from \"../store/chat\";\nimport { useNavigate } from \"react-router-dom\";\nconst HomeHeader = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const localStorageIsAuth = localStorage.getItem('isAuth');\n    const logoutHandler = () => {\n        dispatch(authAction.logout());\n        dispatch(chatAction.displayedChat(''));\n        dispatch(chatAction.leaveButton(false));\n        localStorage.removeItem('token');\n        localStorage.removeItem('expiryDate');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('isAuth');\n        localStorage.removeItem('image');\n        navigate('/live-chat/login');\n    }\n    return (\n        <Fragment>\n            <header className={styled.header}>\n                <div className={styled.name} onClick={() => navigate('/')}>Live Chat</div>\n                <nav>\n                    <ul>\n                        <li>\n                            {!localStorageIsAuth && <Link to='/live-chat/signin'>Signin</Link>}\n                            {localStorageIsAuth && <Link onClick={logoutHandler} to='/live-chat/login'>Logout</Link>}\n                            {!localStorageIsAuth && <Link to='/live-chat/login'>Login</Link>}\n                        </li>\n                    </ul>\n                </nav>\n            </header>\n            <Outlet />\n        </Fragment>\n    )\n}\n\nexport default HomeHeader","import socketio from \"socket.io-client\";\nimport React from \"react\";\n\nexport const socket = socketio('https://live-chat-scql.onrender.com');\nexport const SocketContext = React.createContext();","import { chatAction } from '../store/chat';\nimport styled from './CreateChat.module.css'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SocketContext } from \"../../socket\";\nimport { useContext, useState } from 'react';\nconst CreateChat = () => {\n    //General data\n    const socket = useContext(SocketContext);\n    const dispatch = useDispatch();\n    const displayedChat = useSelector(state => state.chat.displayedChat);\n    const agenda = useSelector(state => state.chat.agenda);\n    //About ME\n    const name = useSelector(state => state.chat.name);\n    const image = useSelector(state => state.chat.image);\n    const localStorageId = localStorage.getItem(\"userId\");\n    const token = localStorage.getItem(\"token\");\n    //CreateGroup\n    const createGroup = useSelector(state => state.chat.createGroup);\n    const groupUsers = useSelector(state => state.chat.groupUsers);\n    const groupName = useSelector(state => state.chat.groupName);\n    const [groupImage, setGroupImage] = useState('')\n    const groupImageIsSelected = useSelector(state => state.chat.groupImageIsSelected);\n    const imAlreadyInGroup = groupUsers?.find(user => user.userId === localStorageId);\n    ////\n    const createGroupHandler = (e) => {\n        e.preventDefault();\n        const checkMyUserExist = imAlreadyInGroup ? groupUsers : [...groupUsers, { name: name, image: image, userId: localStorageId }]\n        const formData = new FormData()\n        formData.append('name', groupName)\n        formData.append('image', groupImage)\n        formData.append('groupUsers', JSON.stringify(checkMyUserExist))\n\n        fetch('https://live-chat-scql.onrender.com/create-group', {\n            method: 'POST',\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n            body: formData\n        })\n            .then(result => result.json())\n            .then(data => {\n                if (data.errorMessage) {\n                    console.log('error');\n                    dispatch(chatAction.error(data.errorMessage));\n                    dispatch(chatAction.groupUsers(data.oldInput.groupUsers));\n                } else {\n                    socket.emit('conversations', displayedChat, data);\n                    dispatch(chatAction.groupName(''));\n                    dispatch(chatAction.groupUsers(false));\n                    const newAgenda = agenda.map(user => user.isChecked ? { ...user, isChecked: false } : user);\n                    dispatch(chatAction.userAgenda(newAgenda));\n                    dispatch(chatAction.createGroup(false));\n                    dispatch(chatAction.isSearching(false));\n                    dispatch(chatAction.error(''));\n                    dispatch(chatAction.showRight(true))\n                    dispatch(chatAction.groupImageIsSelected(false))\n                    dispatch(chatAction.showGroupNameInput(false))\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n    const changeImageHandler = (e) => {\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append('image', e.target.files[0])\n        formData.append('id', localStorageId)\n        fetch('https://live-chat-scql.onrender.com/change-image', {\n            method: 'POST',\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n            body: formData\n        })\n            .then(result => result.json())\n            .then(data => {\n                if (data.errorMessage) {\n                    dispatch(chatAction.error(data.errorMessage))\n                } else {\n                    dispatch(chatAction.error(''))\n                    dispatch(chatAction.personalImage(data.image))\n                    localStorage.setItem('image', data.image)\n                    socket.emit('change-image', data.conversations)\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n    const addGroupImageHandler = (e) => {\n        setGroupImage(e.target.files[0])\n        dispatch(chatAction.groupImageIsSelected(true))\n    }\n    const addGroupNameHandler = () => {\n        dispatch(chatAction.createGroup(true))\n        dispatch(chatAction.groupImageIsSelected(false))\n        dispatch(chatAction.showGroupNameInput(true))\n    }\n    return (\n\n        <div className={styled.action}>\n            <label>\n                <input type='file' name='image' id='image' onChange={changeImageHandler} className={styled.none}></input>\n                <img src={image} alt='user'></img>\n            </label>\n            {(groupUsers.length >= 2 && !createGroup && !groupImageIsSelected) && <label className={styled.groupImage}>Group Image\n                <input type='file' name='image' id='image' onChange={addGroupImageHandler} className={styled.none}></input>\n\n            </label>}\n            {groupImageIsSelected && <button onClick={addGroupNameHandler}>Group Name</button>}\n            {createGroup && <button onClick={createGroupHandler}>Create Group </button>}\n        </div>\n\n    )\n}\n\nexport default CreateChat","import styled from './Search.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { chatAction } from '../store/chat';\nconst Search = () => {\n    //General data\n    const dispatch = useDispatch();\n    const showGroupNameInput = useSelector(state => state.chat.showGroupNameInput);\n    const isSearching = useSelector(state => state.chat.isSearching);\n    //My information\n    const agenda = useSelector(state => state.chat.agenda);\n    //Conversations data\n    const groupName = useSelector(state => state.chat.groupName);\n    /////\n    const groupNameHandler = (e) => {\n        dispatch(chatAction.groupName(e.target.value));\n    }\n    const searchHandler = (e) => {\n\n        const search = e.target.value;\n        if (search.trim().length > 0) {\n            const filteredConvo = agenda.filter(conversation => {\n                return conversation.name.toLowerCase().includes(search.toLowerCase());\n            })\n            if (filteredConvo.length === 0) {\n                dispatch(chatAction.filteredAgendaNotFound(true));\n            } else {\n                dispatch(chatAction.filteredAgendaNotFound(false));\n            }\n            dispatch(chatAction.filteredAgenda(filteredConvo));\n        } else {\n\n            dispatch(chatAction.filteredAgenda(agenda));\n        }\n    }\n    const backHandler = () => {\n        const newAgenda = agenda.map(user => user.isChecked ? { ...user, isChecked: !user.isChecked } : user);\n        dispatch(chatAction.userAgenda(newAgenda));\n        dispatch(chatAction.groupUsers(false));\n        dispatch(chatAction.isSearching(false));\n        dispatch(chatAction.createGroup(false));\n        dispatch(chatAction.error(''));\n    }\n\n    setTimeout(() => {\n\n    }, 3000)\n    return (\n\n        <div className={styled.search}>\n            {isSearching && <button className=\"fa\" onClick={backHandler}>&#xf104;</button>}\n\n            {!showGroupNameInput && <input onChange={searchHandler} type=\"text\" placeholder=\"Search...\" onFocus={() => { dispatch(chatAction.isSearching(true)) }} />}\n            {showGroupNameInput && <input type='text' placeholder='Group Name' defaultValue={groupName} onChange={groupNameHandler}></input>}\n        </div>\n\n    )\n}\n\nexport default Search","import styled from './PersonalMessages.module.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { chatAction } from '../store/chat';\nimport { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nconst PersonalMessages = () => {\n    //General data\n    const dispatch = useDispatch();\n    const windowWidth = useSelector((state) => state.chat.windowWidth);\n    const isSearching = useSelector((state) => state.chat.isSearching);\n    const name = useSelector((state) => state.chat.name);\n    //My information\n    const image = localStorage.getItem('image');\n    const localStorageId = localStorage.getItem('userId');\n    const agenda = useSelector((state) => state.chat.agenda);\n    const filteredAgenda = useSelector((state) => state.chat.filteredAgenda);\n    const filteredAgendaNotFound = useSelector((state) => state.chat.filteredAgendaNotFound);\n    //Conversations data\n    const conversations = useSelector((state) => state.chat.conversations);\n    const createGroup = useSelector((state) => state.chat.createGroup);\n    ////\n    return (\n        <div className={styled.conversation}>\n            {(!createGroup ? (isSearching ? ((filteredAgenda.length !== 0 || filteredAgendaNotFound) ? filteredAgenda : agenda) : conversations) : agenda).map(contact =>\n                <Fragment key={contact._id ? contact._id : contact.userId}>\n                    {<Link onClick={(e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        if (contact.userId) {\n                            dispatch(chatAction.isSearching(false));\n                            dispatch(chatAction.groupUsers(false));\n                            dispatch(chatAction.showInput(true));\n                            dispatch(chatAction.createGroup(false));\n                            dispatch(chatAction.groupName(''));\n                            dispatch(chatAction.showRight(true))\n                            dispatch(chatAction.error(false))\n\n                            const checkIfConversationExist = conversations.map(conversation => {\n                                let conversationForReturn;\n                                if (conversation.conversationUsers.length === 2) {\n                                    if ((conversation.conversationUsers[0].id === localStorageId || conversation.conversationUsers[0].id === contact.userId) && (conversation.conversationUsers[1].id === localStorageId || conversation.conversationUsers[1].id === contact.userId)) {\n                                        conversationForReturn = conversation;\n                                    }\n                                }\n                                return conversationForReturn;\n                            })\n                            const newUserIds = checkIfConversationExist.filter(conversation => conversation !== undefined);\n                            if (newUserIds[0]) {\n                                dispatch(chatAction.displayedChat(newUserIds[0]));\n                                dispatch(chatAction.leaveButton(true));\n                            } else {\n                                dispatch(chatAction.leaveButton(false));\n                                dispatch(chatAction.displayedChat({ id: isSearching ? contact.userId : contact._id, name: name, image: contact.image, secondUserName: contact.name, messages: contact.messages, conversationUsers: contact.conversationUsers ? contact.conversationUsers : [{ id: localStorageId, image: image, name: name }, { id: contact.userId, image: contact.image, name: contact.name }] }));\n                            }\n                        } else {\n                            dispatch(chatAction.displayedChat({ id: isSearching ? contact.userId : contact._id, name: contact.name, image: contact.image, secondUserName: contact.secondUserName, messages: contact.messages, conversationUsers: isSearching ? [{ id: localStorageId, image: image, name: name }, { id: contact.userId, image: contact.image, name: contact.name }] : contact.conversationUsers }));\n                            dispatch(chatAction.leaveButton(true));\n                            dispatch(chatAction.showInput(true));\n                            dispatch(chatAction.groupUsers(false));\n                            dispatch(chatAction.showRight(true))\n                        }\n                    }} className={styled.conversationInfo}>\n                        <div className={styled.conversationDetails}>\n                            <img src={`${contact.conversationUsers?.length === 2 ? [...contact.conversationUsers].filter(user => user.id !== localStorageId)[0].image : contact.image}`} alt='user'></img>\n                            <div className={styled.nameAndLastMessage}>\n                                <div className={styled.chatName}>\n                                    {contact.conversationUsers?.length === 2 ? (contact.secondUserName === name ? (windowWidth < 960 ? contact.name.slice(0, 7) + '...' : contact.name) : (windowWidth < 960 ? contact.secondUserName.slice(0, 7) + '...' : contact.secondUserName)) : (windowWidth < 960 ? contact.name.slice(0, 7) + '...' : contact.name)}\n                                </div>\n                                <div className={styled.lastMessage}>\n                                    {(!isSearching && !createGroup) && (contact.messages.length !== 0 ? contact.messages[contact.messages.length - 1].name + \" : \" + (contact.messages[contact.messages.length - 1].message.length > 8 ? contact.messages[contact.messages.length - 1].message.slice(0, 8) + '...' : contact.messages[contact.messages.length - 1].message) : '')}\n                                </div>\n                            </div>\n                        </div>\n                        <div className={styled.lastMessageTime}>\n                            {isSearching && <input onClick={(e) => {\n                                e.stopPropagation();\n                                const newAgenda = agenda.map(user => (user.userId === contact.userId) ? { ...user, isChecked: !contact.isChecked } : user);\n                                console.log(contact);\n                                dispatch(chatAction.userAgenda(newAgenda));\n                                dispatch(chatAction.groupUsers(contact));\n                            }\n                            }\n                                type='checkbox' defaultChecked={contact.isChecked}></input>}\n                            {(!isSearching && !createGroup) && (contact.messages.length !== 0 ? new Date(contact.messages[contact.messages.length - 1].time).getHours() + \":\" + (new Date(contact.messages[contact.messages.length - 1].time).getMinutes() < 10 ? \"0\" + new Date(contact.messages[contact.messages.length - 1].time).getMinutes() : new Date(contact.messages[contact.messages.length - 1].time).getMinutes()) : '')}\n                        </div>\n                    </Link>}\n                </Fragment>)\n            }\n        </div >\n\n    )\n}\n\nexport default PersonalMessages","import { Fragment } from 'react';\nimport CreateChat from './left/CreateChat';\nimport Search from './left/Search';\nimport PersonalMessages from './left/PersonalMessages';\n\nconst Left = () => {\n    return (\n\n        <Fragment>\n            <CreateChat />\n            <Search />\n            <PersonalMessages />\n        </Fragment>\n\n    )\n}\n\nexport default Left","import styled from './ChatInfo.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SocketContext } from \"../../socket\";\nimport { useContext } from 'react';\nimport { chatAction } from '../store/chat';\n\nconst ChatInfo = () => {\n    //General data\n    const socket = useContext(SocketContext);\n    const dispatch = useDispatch();\n    const displayedChat = useSelector((state) => state.chat.displayedChat);\n    const windowWidth = useSelector((state) => state.chat.windowWidth);\n    const leaveButton = useSelector((state) => state.chat.leaveButton);\n    //My data\n    const name = useSelector((state) => state.chat.name);\n    const localStorageId = localStorage.getItem('userId');\n    const token = localStorage.getItem('token');\n    /////\n    const leaveGroupHandler = (e) => {\n        e.preventDefault();\n        dispatch(chatAction.showRight(false))\n        dispatch(chatAction.leaveButton(false));\n        fetch('https://live-chat-scql.onrender.com/leave-group', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: 'Bearer ' + token\n            },\n            body: JSON.stringify({ id: localStorageId, convId: displayedChat._id ? displayedChat._id : displayedChat.id, leaveName: name })\n        })\n            .then(result => result.json())\n            .then(data => {\n                socket.emit('leave-conversation', data);\n\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n    const backHandler = () => {\n        dispatch(chatAction.showRight(false))\n    }\n    return (\n        <div className={styled.info}>\n            <div className={styled.conversationInfo}>\n                <div className={styled.conversationDetails}>\n                    {windowWidth < 800 && <button className={`fa ${styled.backButton}`} onClick={backHandler}>&#xf104;</button>}\n                    {displayedChat && <img src={displayedChat.conversationUsers?.length === 2 ? Object.values([{ ...displayedChat.conversationUsers }][0]).filter(user => user.id !== localStorageId)[0]?.image : displayedChat.image} alt='user'></img>}\n\n                    {windowWidth > 380 && <div className={styled.nameAndLastMessage}>\n                        <div className={styled.chatName}>\n                            {displayedChat.secondUserName === name ? displayedChat.name : displayedChat.secondUserName}\n                        </div>\n                        <div className={styled.membersNames}>\n                            {(displayedChat.messages && displayedChat.messages.length !== 0) && (displayedChat.messages ? displayedChat.messages[displayedChat.messages.length - 1].name : '') + ': ' + (displayedChat.messages ? displayedChat.messages[displayedChat.messages.length - 1].message.length > 8 ? displayedChat.messages[displayedChat.messages.length - 1].message.slice(0, 8) + '...' : displayedChat.messages[displayedChat.messages.length - 1].message : '')}\n                        </div>\n                    </div>}\n                </div>\n                {leaveButton && <button onClick={leaveGroupHandler}>Leave</button>}\n            </div>\n        </div>\n\n    )\n}\n\nexport default ChatInfo","import { Fragment, useContext, useEffect, useRef } from 'react';\nimport styled from './ChatBox.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chatAction } from '../store/chat';\nimport { SocketContext } from \"../../socket\";\nconst ChatBox = () => {\n    //General data\n    const socket = useContext(SocketContext);\n    const displayedChat = useSelector((state) => state.chat.displayedChat);\n    const dispatch = useDispatch();\n    const ref = useRef(null);\n    //My data\n    const localStorageId = localStorage.getItem('userId');\n    ////\n\n    const scrollDownHandler = () => {\n        ref.current?.scrollIntoView({ behavior: 'smooth' })\n    }\n    useEffect(() => {\n        scrollDownHandler()\n    }, [displayedChat])\n    useEffect(() => {\n        socket.on('new-data', (dataInfo, data) => {\n            data.conversationUsers.map(userInfo => {\n                if (userInfo.id === localStorageId) {\n                    if (displayedChat.id || displayedChat._id) {\n                        if ((displayedChat._id ? displayedChat._id : displayedChat.id) === (dataInfo._id ? dataInfo._id : dataInfo.id)) {\n                            dispatch(chatAction.displayedChat(data));\n                            dispatch(chatAction.updateConversations(data));\n                        } else {\n                            dispatch(chatAction.displayedChat(displayedChat));\n                            dispatch(chatAction.updateConversations(data));\n                        }\n                    } else {\n                        dispatch(chatAction.displayedChat(displayedChat));\n                        dispatch(chatAction.updateConversations(data));\n                    }\n                }\n                return true;\n            })\n        })\n        return () => {\n            socket.removeAllListeners();\n        }\n    }, [displayedChat, dispatch, localStorageId, socket])\n    return (\n        <div className={styled.messages}>\n            {displayedChat.messages && displayedChat.messages?.map(message =>\n                <Fragment key={message._id}>\n                    <div className={`${styled.message} ${message.messageUser === localStorageId ? styled.personalFlexEnd : ''}`}>\n                        <div className={`${styled.messageInfo} ${message.messageUser === localStorageId ? styled.personalFlexEnd : ''}`}>\n                            {message.messageUser !== localStorageId && message.messageUser ? <img src={message.image} alt='user'></img> : ''}\n                            <div className={`${styled.nameAndMessage} ${message.messageUser !== localStorageId ? styled.margin : ''} ${!message.messageUser ? styled.leftConvo : ''}`}>\n                                <div className={styled.name}>\n                                    {message.messageUser !== localStorageId ? message.name : ''}\n                                </div>\n                                <pre className={styled.message}>\n                                    {message.message}\n                                </pre>\n                            </div>\n                        </div>\n                        {message.messageUser && <div className={styled.time}>\n                            {new Date(message.time).getHours() + \":\" + (new Date(message.time).getMinutes() < 10 ? \"0\" + new Date(message.time).getMinutes() : new Date(message.time).getMinutes())}\n                        </div>}\n                    </div>\n                </Fragment>\n            )}\n            <div ref={ref} ></div>\n        </div>\n    )\n}\n\nexport default ChatBox","import styled from './InputMessage.module.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { chatAction } from '../store/chat';\nimport { SocketContext } from \"../../socket\";\nimport { useContext } from 'react';\n\nconst InputMessage = () => {\n    //General data\n    const socket = useContext(SocketContext);\n    const dispatch = useDispatch();\n    const displayedChat = useSelector((state) => state.chat.displayedChat);\n    const showInput = useSelector((state) => state.chat.showInput);\n    //My data\n    const personalName = useSelector((state) => state.chat.name);\n    const message = useSelector((state) => state.chat.message);\n    const image = localStorage.getItem('image');\n    const localStorageUserId = localStorage.getItem('userId');\n    const token = localStorage.getItem('token');\n    ////\n\n    const messageHandler = (e) => {\n        e.preventDefault()\n        fetch('https://live-chat-scql.onrender.com/message', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: 'Bearer ' + token\n            },\n            body: JSON.stringify({ id: displayedChat._id ? displayedChat._id : displayedChat.id, image: image, personalId: localStorageUserId, personalName: personalName, name: displayedChat.name, secondUserName: displayedChat.secondUserName, message: message, conversationUsers: displayedChat.conversationUsers, displayedChat: displayedChat })\n        })\n            .then(result => result.json())\n            .then(data => {\n                socket.emit('conversations', displayedChat, data);\n                dispatch(chatAction.leaveButton(true));\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        dispatch(chatAction.getMessage(''));\n    }\n    return (\n\n        <div className={styled.input}>\n            <form className={styled.message} onSubmit={messageHandler}>\n                {showInput && <textarea type=\"text\" placeholder=\"Type a message\" name='message' onChange={(e) => dispatch(chatAction.getMessage(e.target.value))} value={message}></textarea>}\n                {showInput && <button disabled={!message.trim().length > 0} type='submit' className={`material-icons`}>&#xe163;</button>}\n            </form>\n        </div>\n\n    )\n}\n\nexport default InputMessage","import { Fragment } from 'react';\nimport ChatInfo from './right/ChatInfo';\nimport ChatBox from './right/ChatBox';\nimport InputMessage from './right/InputMessage';\n\nconst right = () => {\n    return (\n        <Fragment>\n            <ChatInfo />\n            <ChatBox />\n            <InputMessage />\n        </Fragment>\n\n    )\n}\n\nexport default right","import styled from \"./HomeContent.module.css\";\nimport Left from \"./Left\";\nimport Right from \"./Right\";\nimport { authAction } from \"./store/auth\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\";\nimport { useContext, useEffect } from \"react\";\nimport { chatAction } from './store/chat';\nimport { SocketContext } from \"../socket\";\nconst HomeContent = () => {\n    //General data\n    const socket = useContext(SocketContext);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const displayedChat = useSelector((state) => state.chat.displayedChat);\n    const error = useSelector(state => state.chat.error);\n    const showRight = useSelector(state => state.chat.showRight);\n    //My data\n    const localStorageIsAuth = localStorage.getItem('isAuth');\n    const localStorageId = localStorage.getItem('userId');\n    const token = localStorage.getItem('token');\n    const image = localStorage.getItem('image');\n    ////\n    const windowWidth = useSelector(state => state.chat.windowWidth)\n    // console.log(window);\n    useEffect(() => {\n        if (!localStorageIsAuth) {\n            navigate('/login');\n        } else {\n            const expiryDate = localStorage.getItem('expiryDate');\n            setAutoLogout(new Date(expiryDate).getTime() - new Date(new Date()).getTime());\n        }\n\n    })\n    const logoutHandler = () => {\n        dispatch(authAction.logout());\n        dispatch(chatAction.displayedChat(''));\n        dispatch(chatAction.leaveButton(false));\n        dispatch(chatAction.showInput(false));\n        dispatch(chatAction.leaveButton(false));\n        localStorage.removeItem('token');\n        localStorage.removeItem('expiryDate');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('isAuth');\n    }\n\n    const setAutoLogout = milliseconds => {\n        setTimeout(() => {\n            logoutHandler();\n            navigate('/live-chat/login');\n        }, milliseconds);\n    };\n    useEffect(() => {\n        socket.on('leave', (data) => {\n            if (data === 'Deleted') {\n                return dispatch(chatAction.displayedChat(''));\n            } else {\n                const userIdFromConversation = data.conversationUsers.find(userInfo => userInfo.id === localStorageId);\n                if (userIdFromConversation?.id === localStorageId && data._id === (displayedChat._id ? displayedChat._id : displayedChat.id)) {\n                    dispatch(chatAction.displayedChat(data));\n                    dispatch(chatAction.updateConversations(data));\n\n                } else if (userIdFromConversation?.id === localStorageId) {\n                    dispatch(chatAction.updateConversations(data));\n                } else {\n                    dispatch(chatAction.displayedChat(''));\n                    dispatch(chatAction.leaveConversation(data));\n\n                }\n            }\n            return () => {\n                socket.removeAllListeners();\n            }\n        })\n    }, [dispatch, localStorageId, displayedChat._id, displayedChat.id, socket])\n    useEffect(() => {\n        socket.on('image', conversations => {\n            conversations.map(conversation => {\n                conversation.conversationUsers.map(userInfo => {\n                    if (userInfo.id.toString() === localStorageId) {\n                        if (conversation._id.toString() === (displayedChat._id ? displayedChat._id : displayedChat.id)) {\n                            dispatch(chatAction.updateConversations({ conversation: conversation, image: true }))\n                            dispatch(chatAction.displayedChat(conversation))\n                        } else {\n                            dispatch(chatAction.updateConversations({ conversation: conversation, image: true }))\n                        }\n                    }\n                    return true\n                })\n                return true\n            }\n            )\n        })\n    }, [dispatch, displayedChat, socket, localStorageId])\n    fetch('https://live-chat-scql.onrender.com/users', {\n        method: 'GET',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: 'Bearer ' + token\n        },\n    })\n        .then(result => result.json())\n        .then(data => {\n            dispatch(chatAction.name(data.users.find(user => user.userId === localStorageId)?.name));\n            dispatch(chatAction.user(data.users));\n            const agenda = data.users.filter(user => user.userId !== localStorageId);\n            agenda.map(user => [{ ...user, isChecked: false }]);\n            dispatch(chatAction.userAgenda(agenda));\n        })\n        .catch(err => {\n            console.log(err);\n        })\n\n    fetch('https://live-chat-scql.onrender.com/conversation', {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: 'Bearer ' + token\n        },\n        body: JSON.stringify({ id: localStorageId })\n    })\n        .then(result => result.json())\n        .then(data => {\n            dispatch(chatAction.getConversations(data.conversations));\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    const classLeft = showRight ? styled.dontShow : '';\n    const classRight = !showRight ? styled.dontShow : '';\n    const handleResize = () => {\n        dispatch(chatAction.windowWidth(window.innerWidth))\n    }\n    useEffect(() => {\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    });\n    useEffect(() => {\n        dispatch(chatAction.personalImage(image))\n        dispatch(chatAction.windowWidth(window.innerWidth))\n    })\n    return (\n        <div className={styled.home}>\n            <p>{error}</p>\n            {localStorageIsAuth && <div className={styled.container}>\n                <div className={`${styled.left} ${windowWidth < 800 ? classLeft : ''}`}>\n                    <Left />\n                </div>\n                <div className={`${styled.right} ${windowWidth < 800 ? classRight : ''}`}>\n                    <Right />\n                </div>\n            </div>}\n        </div >\n    )\n}\n\nexport default HomeContent","import HomeContent from \"../components/HomeContent\";\n\nconst Home = () => {\n\n    return (\n        <div>\n            <HomeContent />\n        </div>\n    )\n}\n\nexport default Home;","import styled from \"./LoginContent.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { authAction } from \"../store/auth\";\nimport { chatAction } from \"../store/chat\";\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const emailChangeHandler = (e) => {\n        setEmail(e.target.value);\n    }\n    const passwordChangeHandler = (e) => {\n        setPassword(e.target.value);\n    }\n    const navigate = useNavigate()\n    const loginHandler = (e) => {\n        e.preventDefault();\n        fetch('https://live-chat-scql.onrender.com/login', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ email: email, password: password })\n        })\n            .then(result => result.json())\n            .then(data => {\n                if (data.errorMessage) {\n                    setEmail(data.oldInput.email);\n                    setPassword(data.oldInput.password);\n                    setErrorMessage(data.errorMessage);\n                } else {\n                    dispatch(authAction.login({ token: data.token, userId: data.userId, image: data.image }));\n                    dispatch(chatAction.personalImage(data.image))\n                    dispatch(authAction.login({ image: data.image }));\n                    localStorage.setItem('token', data.token);\n                    localStorage.setItem('userId', data.userId);\n                    localStorage.setItem('isAuth', true);\n                    localStorage.setItem('image', data.image);\n                    const remainingMilliseconds = 60 * 60 * 1000;\n                    const expiryDate = new Date(\n                        new Date().getTime() + remainingMilliseconds\n                    );\n                    localStorage.setItem('expiryDate', expiryDate);\n                    navigate('/live-chat');\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n\n    return (\n        <div className={styled.loginContainer}>\n            <form onSubmit={loginHandler} className={styled.login}>\n                <p>{errorMessage}</p>\n                <label htmlFor=\"email\">E-mail</label>\n                <input type=\"email\" name=\"email\" onChange={emailChangeHandler} value={email}></input>\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" name=\"password\" onChange={passwordChangeHandler} value={password}></input>\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n\n    )\n}\n\nexport default Login","import LoginContent from \"../components/auth/LoginContent\";\n\n\nconst Login = () => {\n    return (\n        <div>\n            <LoginContent />\n        </div>\n    )\n}\n\nexport default Login;","import styled from \"./SigninContent.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nconst Signin = () => {\n    const navigate = useNavigate('');\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [image, setImage] = useState('');\n    const nameChangeHandler = (e) => {\n        setName(e.target.value);\n    }\n    const emailChangeHandler = (e) => {\n        setEmail(e.target.value);\n    }\n    const passwordChangeHandler = (e) => {\n        setPassword(e.target.value);\n    }\n    const imageChangeHandler = (e) => {\n        setImage(e.target.files[0])\n    }\n\n    const signinHandler = (e) => {\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('image', image)\n        formData.append('email', email)\n        formData.append('password', password)\n        e.preventDefault()\n        fetch('https://live-chat-scql.onrender.com/signup', {\n            method: 'POST',\n\n            body: formData\n        })\n            .then(result => result.json())\n            .then(data => {\n                if (!data.message) {\n                    setName(data.oldInput.name);\n                    setEmail(data.oldInput.email);\n                    setImage(data.oldInput.image)\n                    setPassword(data.oldInput.password);\n                    setErrorMessage(data.errorMessage);\n                } else {\n                    navigate('/live-chat/login');\n                }\n            })\n    }\n\n    return (\n        <div className={styled.signinContainer}>\n            <form onSubmit={signinHandler} className={styled.signin} >\n                <p>{errorMessage}</p>\n                <label htmlFor=\"name\">Name</label>\n                <input onChange={nameChangeHandler} type=\"text\" name=\"name\" value={name}></input>\n                <label htmlFor=\"image\">Avatar</label>\n                <input onChange={imageChangeHandler} type=\"file\" name=\"image\" id=\"image\" ></input>\n                <label htmlFor=\"email\">E-mail</label>\n                <input onChange={emailChangeHandler} type=\"email\" name=\"email\" value={email}></input>\n                <label htmlFor=\"password\">Password</label>\n                <input onChange={passwordChangeHandler} type=\"password\" name=\"password\" value={password}></input>\n                <button type=\"submit\">Signin</button>\n            </form>\n        </div>\n\n    )\n}\n\nexport default Signin","import SigninContent from \"../components/auth/SigninContent\";\n\n\nconst Signin = () => {\n    return (\n        <div>\n            <SigninContent />\n        </div>\n    )\n}\n\nexport default Signin;","import \"./index.css\";\nimport { createBrowserRouter, RouterProvider, } from 'react-router-dom';\nimport AuthHeader from './components/headers/AuthHeader';\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signin from \"./pages/Signin\";\nimport { socket, SocketContext } from './socket';\n\n\nconst router = createBrowserRouter([\n  {\n    path: '/live-chat', element: <AuthHeader />, children: [\n\n      { path: '/live-chat/signin', element: <Signin /> },\n      { path: '/live-chat/login', element: <Login /> },\n      // { path: '/resetpassword', element: <ResetPassword /> }\n      { path: '/live-chat', element: <Home /> }\n    ],\n  },\n])\n\n\nconst App = () => {\n\n\n  return (\n    <SocketContext.Provider value={socket}>\n      <RouterProvider router={router} />\n    </SocketContext.Provider>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\n\nimport authReducer from \"./auth\";\nimport chatReducer from \"./chat\";\n\nconst store = configureStore({\n    reducer: { auth: authReducer, chat: chatReducer },\n});\n\nexport default store;","import ReactDOM from 'react-dom/client';\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport App from './App';\nimport store from \"./components/store/index\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n"],"sourceRoot":""}